/****************************************************************************
  Generated by T4TS.tt - don't make any changes in this file
****************************************************************************/

// -- Begin global interfaces
    /** Generated from T4TS.Example.Models.Barfoo */
    interface Barfoo extends Object {
        Number: number;
        Complex: T4TS.OverridenName;
        Name: string;
        DateTime: string;
    }
    
// -- End global interfaces

module Fooz {
    /** Generated from T4TS.Example.Models.Foobar */
    export interface IFoobar extends Object {
        OverrideAll?: bool;
        Recursive: Fooz.IFoobar;
        NullableInt?: number;
        NullableDouble?: number;
        NestedObjectArr: Barfoo[];
        NestedObjectList: Barfoo[];
        TwoDimensions: string[][];
        ThreeDimensions: Barfoo[][][];
        camelCasePlease: number;
    }
    
}

module T4TS {
    /**
    Generated from System.Object
    <summary>Supports all classes in the .NET Framework class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all classes in the .NET Framework; it is the root of the type hierarchy.</summary>
    */
    interface Object {
    }
    
    /**
    Generated from System.Attribute
    <summary>Represents the base class for custom attributes.</summary>
    */
    interface Attribute extends Object {
        TypeId: any;
    }
    
    /**
    Generated from T4TS.TypeScriptInterfaceAttribute
    <summary>
    Add this attribute to a class to generate a corresponding TypeScript interface.
    </summary>
    */
    interface TypeScriptInterfaceAttribute extends Attribute {
        Module: string;
        Name: string;
        NamePrefix: string;
        CreateTypeScriptInterfacesAlsoForBaseClasses: bool;
    }
    
    /** Generated from T4TS.Example.Models.CrossProjectInheritanceTest */
    export interface CrossProjectInheritanceTest extends TypeScriptInterfaceAttribute {
        SomeString4: string;
        Recursive4: Fooz.IFoobar;
    }
    
    /** Generated from T4TS.Example.Models.InheritanceTest1 */
    export interface InheritanceTest1 extends Object {
        SomeString: string;
        Recursive: Fooz.IFoobar;
    }
    
    /** Generated from T4TS.Example.Models.InheritanceTest2 */
    export interface InheritanceTest2 extends T4TS.InheritanceTest1 {
        SomeString2: string;
        Recursive2: Fooz.IFoobar;
    }
    
    /** Generated from T4TS.Example.Models.InheritanceTest3 */
    export interface InheritanceTest3 extends T4TS.OverridenName {
        SomeString3: string;
        Recursive3: Fooz.IFoobar;
    }
    
    /** Generated from T4TS.Example.Models.InheritanceTest4 */
    export interface InheritanceTest4 extends Object {
        SomeString4: string;
        Recursive4: Fooz.IFoobar;
    }
    
    /** Generated from T4TS.Example.Models.Inherited */
    export interface OverridenName extends Object {
        OtherName?: string;
        Integers: number[];
        Doubles: number[];
        TwoDimList: number[][];
        [index: number]: Barfoo;
    }
    
}
